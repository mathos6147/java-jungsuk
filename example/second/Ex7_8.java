package example.second;

public class Ex7_8 {
    /**
     * 제어자
     *  - 클래스와 클래스의 멤버(멤버 변수, 메서드)에 부가적인 의미 부여
     *  - 접근 제어자 public, protected, (default), private
     *  - 그 외 : static, final, abstract, native, ...
     *  - 하나의 대상에 여러 제어자를 같이 사용 가능(접근 제어자는 하나만 가능)
     *
     * static - 클래스의, 공통적인
     *  - 멤버 변수 : 모든 인스턴스에 공통적으로 사용되는 클래스 변수가 된다
     *  - 메서드 : 인스턴스를 생성하지 않고도 호출이 가능한 static 메서드가 된다.
     *
     * final - 마지막의, 변경될 수 없는
     *  - 클래스 : 변경될 수 없는 클래스, 확장될 수 없는 클래스가 된다
     *       그래서 final 로 지정된 클래스는 다른 클래스의 조상이 될 수 없다.
     *  - 메서드 : 변경될 수 없는 메서드. final 로 지정된 메서드는 오버라이딩을 통해 재정의가 불가능 하다.
     *  - 멤버 변수, 지역 변수 : 변수 앞에 final 이 붙으면, 값을 변경할 수 없는 상수가 된다.
     *
     *  abstract - 추상의, 미완성의
     *   - 클래스 : 클래스 내에 추상 메서드가 선언되어 있음을 의미한다.
     *   - 메서드 : 선언부만 작성하고 구현부는 작성하지 않은 추상 메서드임을 알린다.
     *      -> 미완성 메서드, 선언부만 있고 구현부는 없는 메서드
     *   - 추상 클래스의 인스턴스 생성 불가능, 미완성 설계도이기 때문에 제품 생산이 불가능함.
     *   - 추상 클래스를 상속 받아서 완전한 클래스를 만든후에 객체를 생성 가능하다.
     */
}
